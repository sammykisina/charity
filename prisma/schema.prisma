// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  refresh_token_expires_in        Int?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  role          String @default("DONOR")
  hides         HideNotification[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Fundraising {
  id                        String     @id @default(cuid())
  title                     String     @db.Text
  description               String     @db.Text
  target_donation_amount    Int
  donated_amount            Int       @default(0) 
  campaign                  String
  createdAt                 DateTime  @default(now())   
  start_date                DateTime
  end_date                  DateTime
}

model Notification {
  id           String @id @default(cuid())
  title        String 
  message      String @db.Text
  time         DateTime @default(now())  
  status       String
  owner        String  
  hides        HideNotification[]           
}

model HideNotification {
  id                String @id @default(cuid())

  notification      Notification  @relation(fields: [notification_id], references: [id])
  notification_id   String

  user              User @relation(fields: [user_id], references: [id])
  user_id           String

  @@unique([notification_id,user_id])
}